swagger: '2.0'
info:
  title: JoseSignAndVerifyAPI
  x-ibm-name: josesignandverifyapi
  version: 1.0.0
x-ibm-configuration:
  cors:
    enabled: true
  gateway: datapower-api-gateway
  type: rest
  phase: realized
  enforced: true
  testable: true
  assembly:
    execute:
      - operation-switch:
          version: 2.0.0
          title: operation-switch
          case:
            - operations:
                - verb: post
                  path: /sign
              execute:
                - gatewayscript:
                    version: 2.0.0
                    title: gatewayscript
                    source: |-
                      var jose = require('jose');
                      var jwk = require('jwk');
                      var apim = require('apim');

                      var key1 = {
                          "p": "_YTIKVBxf5dsXuzIwtnUhNaNx4-CYtG8ALV9Eisd1is9tIEc-Qiin-HKa3x4vaWpgQnr5CYYfHxRBzmfjTGp14lCgykh4-5rKV9idwJnJIXxkaFDBV1yQmfSNZtitEjFmXIAk_Ty4-vpzV0r1-aRz6mfhIgT66WJOZPEE_6alws",
                          "kty": "RSA",
                          "q": "u5dwBMvpuFUgvKVAe9MQRECGEHasZWUqYz9kNDnIuuvaItgbWieEuxbci_s5hLMWvWCjW2m2ZafR-YRL2q62qWLPc1Q9tB_FtZzMT8sjr5ra49bfzXxjuL8f8bQ9OTIx2AZnzzZWj0KTzeA5ca9gp59sFc6xPZj2Q32DEShl7DU",
                          "d": "nyxQfj57QrdiouYbFYzBe9yB9wsKq7nYvewKo73tdbP675cRX1vERX4oOLTddmSpoe_rS7Rk-tPerLKyZGfggbsJygBBNQnmjFtpKYDlYs76A32n-FXmdB-4JxUQmgKac6gv5LDJ569lHWFM8vEINiIcPLBpu4z0CvVK__cIEsz_gA1LjvxZfeehYjWheD6_7-5Xbf-4WGl_VJQOeHhBd2sJwxEu3PkA42ciDcZZecIJbOKDWXK9LUg558mpTMh1EoCb2CAuktnwYfiFxaCuq_dgL63R9H3f3oAYo2r5CzY9OcoEANnkGnEXF1oUq6sebt6-CqcA5M_QOwXvWBzQyQ",
                          "e": "AQAB",
                          "use": "sig",
                          "kid": "xHFl4u_LCjlSXjTGGbt0yLCPH85ORaoNJqoCld9Wvxg",
                          "qi": "Hsv5OovrMyf1zb1mwoR1UrSk66SHxOHpUIjZyAXfTFNSFBlAj4_gliTe_G4GXanc_-crhDGVvIndP6WOfw0udpPpviO4O1XcwbrY3DBlf-zznxOAAGmAsp7oiDFJGyKFk1jFL9-ilkkZw5JJzCJbnaZiiwdTyO0CoDN8sfcMpQE",
                          "dp": "EvpfqYgWFwEU4b5EASIhYJhXILtDfXZJ5puvcy67Gw89nUeVDadx1Ron9wfoWfoOyFQfzoJzjs4XmrzbjsxK9JGX4w2vNcrhRsWXL2WEpx1HyikSRVKLfSEcgVrSdsCD2krIdEr_68P7Sp5Q6-acv7jo8hjltNw9e4vuP7jthaU",
                          "alg": "RS256",
                          "dq": "tirXczD55DF2uvrW5egO0di-19oGi-h0AzEaA8VhcnN6v3-RADmEIZKP1be_IWgwWvMvb6P2pj0UIPQiHViwtUjpH5vc18BK5JRBq_Me0nbUvZB6gTecN1oSkUtwcMyXrqp5wLWJ1VDX64MlBYtDl0OvWHYBlEmoS93km5LZd0k",
                          "n": "ucX2dxW2Tht11kntoDJvokIkCouA1eQg6iuvx4H-1yBSS-8sM4DbkN0CMmGwwKdVKOfWqFMx_E-kmrOJjcWH4N6Hx7JnFZLUNlVqK0F8DYhd_8CXYp1TGwpBH7_q6kOFPwyH0y3l3GsoYeIO5AWA3Vua6bknzeG8VdepefdiO0A7h2w6Zy2B_9c856mtnONdKy8RLnnCsbMh--g5G21PvGBdvQeEKnV-2i4dbNa0aaTvuAn9lrOjIbaT5FOxUtQxAfqosbg7kn_K4AMsYvlMZ-jk1OEWDTXMc6Qvx4YgP_mJrbnec8UAoBCNu82WdT6iGBLZ65DtSJ9E80osiJZpRw"
                      };

                      var key = jwk.toBuffer(key1);

                      var jsonData = apim.getvariable('request.body');

                      var strData =JSON.stringify(jsonData);

                      // compact serialization
                      var hdr = jose.createJWSHeader(key, 'RS256');

                      var mySign = jose.createJWSSigner(hdr);

                      mySign.update(strData);
                      mySign.sign('compact',function(error, jwsString) {
                        if (error) {
                          session.output.write("jws sign fail: "+error);
                        } else {
                          session.output.write(jwsString);
                        }
                      });
            - operations:
                - verb: post
                  path: /verify
              execute:
                - gatewayscript:
                    version: 2.0.0
                    title: gatewayscript
                    source: "var apim = require('apim');\nvar jose = require('jose');\nvar jwk = require('jwk');\n\nvar jwsObj = apim.getvariable(\"request.body\");\n\nvar signedJWSString = jwsObj.token;\n\nvar key = {\n    \"kty\": \"RSA\",\n    \"e\": \"AQAB\",\n    \"use\": \"sig\",\n    \"kid\": \"xHFl4u_LCjlSXjTGGbt0yLCPH85ORaoNJqoCld9Wvxg\",\n    \"alg\": \"RS256\",\n    \"n\": \"ucX2dxW2Tht11kntoDJvokIkCouA1eQg6iuvx4H-1yBSS-8sM4DbkN0CMmGwwKdVKOfWqFMx_E-kmrOJjcWH4N6Hx7JnFZLUNlVqK0F8DYhd_8CXYp1TGwpBH7_q6kOFPwyH0y3l3GsoYeIO5AWA3Vua6bknzeG8VdepefdiO0A7h2w6Zy2B_9c856mtnONdKy8RLnnCsbMh--g5G21PvGBdvQeEKnV-2i4dbNa0aaTvuAn9lrOjIbaT5FOxUtQxAfqosbg7kn_K4AMsYvlMZ-jk1OEWDTXMc6Qvx4YgP_mJrbnec8UAoBCNu82WdT6iGBLZ65DtSJ9E80osiJZpRw\"\n};\n\n//var key = jwk.toBuffer(key1);\n\nvar jwsSignedObject = jose.parse(signedJWSString);\n\nvar signedJWSHeaders = jwsSignedObject.getSignatures();\n\n// // Set keys for verification for all signatures\n// for (var i = 0; i < signedJWSHeaders.length; i++) {\n//     var hdr2 = signedJWSHeaders[i];\n//     hdr2.setKey(key); // Set the key for verification\n// }\n\n\n signedJWSHeaders[0].setKey(key); // Set the key for verification\n\n\nvar myValidator = jose.createJWSVerifier(jwsSignedObject);\nmyValidator.validate(function(error) {\n    if (error) {\n        session.output.write(\"Validation failed: \" + error);\n        throw new Error(error);\n    } else {\n      \n        // Access and process the payload if needed\n        var payload = jwsSignedObject.getPayload();\n\t\t\n\t\tsession.output.write(payload);\n    }\n});\n"
          otherwise: []
    catch: []
    finally: []
  properties:
    target-url:
      value: http://example.com/operation-name
      description: The URL of the target service
      encoded: false
  activity-log:
    enabled: true
    success-content: activity
    error-content: payload
  servers:
    - url: ''
  oauth-servers: []
basePath: /josesignandverifyapi/v1
paths:
  /sign:
    parameters:
      - name: reqData
        required: true
        in: body
        schema:
          type: object
          example:
            name: Sam
            city: Bhubaneswar
    post:
      responses:
        '200':
          description: success
          schema:
            type: string
  /verify:
    parameters:
      - name: encText
        required: true
        in: body
        schema:
          example:
            token: Add token here
    post:
      responses:
        '200':
          description: success
          schema:
            type: string
securityDefinitions:
  clientID:
    type: apiKey
    in: header
    name: X-IBM-Client-Id
security:
  - clientID: []
schemes:
  - https
