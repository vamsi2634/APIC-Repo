swagger: '2.0'
info:
  title: Map Policy Demo API
  x-ibm-name: map-policy-demo-api
  version: 1.0.0
  description: IBM APIC Map Policy Demo API
x-ibm-configuration:
  cors:
    enabled: true
  gateway: datapower-api-gateway
  type: rest
  phase: realized
  enforced: true
  testable: true
  assembly:
    execute:
      - invoke:
          title: invoke
          version: 2.0.0
          verb: keep
          target-url: $(target-url)
          header-control:
            type: blacklist
            values: []
          parameter-control:
            type: blacklist
            values: []
          output: var_resp
      - map:
          version: 2.0.0
          title: map
          inputs:
            input:
              schema:
                description: ''
                type: object
                properties:
                  orderData:
                    type: object
                    properties:
                      pOrder:
                        type: object
                        properties:
                          shippingAddress:
                            type: object
                            properties:
                              name:
                                type: string
                                name: name
                              street:
                                type: string
                                name: street
                              city:
                                type: string
                                name: city
                              state:
                                type: string
                                name: state
                              zip:
                                type: string
                                name: zip
                              country:
                                type: string
                                xml:
                                  attribute: true
                                name: '@country'
                            xml:
                              namespace: ''
                            name: shippingAddress
                          billingAddress:
                            type: object
                            properties:
                              name:
                                type: string
                                name: name
                              street:
                                type: string
                                name: street
                              city:
                                type: string
                                name: city
                              state:
                                type: string
                                name: state
                              zip:
                                type: string
                                name: zip
                              country:
                                type: string
                                xml:
                                  attribute: true
                                name: '@country'
                            xml:
                              namespace: ''
                            name: billingAddress
                          orderHeader:
                            type: object
                            properties:
                              orderNumber:
                                type: string
                                name: orderNumber
                              cancelled:
                                type: string
                                name: cancelled
                              currency:
                                type: string
                                name: currency
                            xml:
                              namespace: ''
                            name: orderHeader
                          orderLines:
                            type: object
                            properties:
                              line:
                                type: array
                                items:
                                  properties:
                                    lineNo:
                                      type: string
                                      name: lineNo
                                    quantity:
                                      type: string
                                      name: quantity
                                    status:
                                      type: string
                                      name: status
                                    unitPrice:
                                      type: string
                                      name: unitPrice
                                    discountValue:
                                      type: string
                                      name: discountValue
                                    itemDescription:
                                      type: string
                                      name: itemDescription
                                    supplierCode:
                                      type: string
                                      name: supplierCode
                                  type: object
                                  xml:
                                    namespace: ''
                                name: line
                            xml:
                              namespace: ''
                            name: orderLines
                          orderDate:
                            type: string
                            xml:
                              attribute: true
                            name: '@orderDate'
                        xml:
                          namespace: ''
                        name: pOrder
                    xml:
                      namespace: ''
                    name: orderData
                xml:
                  namespace: ''
                example: "<?xml version=\"1.0\"?>\r\n<orderData>\r\n\t<pOrder orderDate=\"21-11-2020\">\r\n\t\t<shippingAddress country=\"USA\">\r\n\t\t\t<name>Mohammed</name>\r\n\t\t\t<street>street1</street>\r\n\t\t\t<city>city1</city>\r\n\t\t\t<state>state1</state>\r\n\t\t\t<zip>123456</zip>\r\n\t\t</shippingAddress>\r\n\t\t<billingAddress country=\"USA\">\r\n\t\t\t<name>Ahmed</name>\r\n\t\t\t<street>street2</street>\r\n\t\t\t<city>city2</city>\r\n\t\t\t<state>state2</state>\r\n\t\t\t<zip>654321</zip>\r\n\t\t</billingAddress>\r\n\t\t<orderHeader>\r\n\t\t\t<orderNumber>11111</orderNumber>\r\n\t\t\t<cancelled>N</cancelled>\r\n\t\t\t<currency>USD</currency>\r\n\t\t\t<SpecialInstructionCode/>\r\n\t\t\t<Remarks/>\r\n\t\t</orderHeader>\r\n\t\t<orderLines>\r\n\t\t\t<line>\r\n\t\t\t\t<lineNo>01</lineNo>\r\n\t\t\t\t<quantity>1</quantity>\r\n\t\t\t\t<status>Active</status>\r\n\t\t\t\t<unitPrice>20.00</unitPrice>\r\n\t\t\t\t<discountValue>0.00</discountValue>\r\n\t\t\t\t<itemDescription>description1</itemDescription>\r\n\t\t\t\t<supplierCode>SUPPL1</supplierCode>\r\n\t\t\t</line>\r\n\t\t\t<line>\r\n\t\t\t\t<lineNo>02</lineNo>\r\n\t\t\t\t<quantity>2</quantity>\r\n\t\t\t\t<Status>Active</Status>\r\n\t\t\t\t<unitPrice>21.50</unitPrice>\r\n\t\t\t\t<discountValue>1.00</discountValue>\r\n\t\t\t\t<itemDescription>description2</itemDescription>\r\n\t\t\t\t<supplierCode>SUPPL2</supplierCode>\r\n\t\t\t</line>\r\n\t\t\t<line>\r\n\t\t\t\t<lineNo>03</lineNo>\r\n\t\t\t\t<quantity>2</quantity>\r\n\t\t\t\t<Status>Cancelled</Status>\r\n\t\t\t\t<unitPrice>31.00</unitPrice>\r\n\t\t\t\t<discountValue>1.00</discountValue>\r\n\t\t\t\t<itemDescription>description3</itemDescription>\r\n\t\t\t\t<supplierCode>SUPPL3</supplierCode>\r\n\t\t\t</line>\t\t\r\n\t\t\t<line>\r\n\t\t\t\t<lineNo>04</lineNo>\r\n\t\t\t\t<quantity>1</quantity>\r\n\t\t\t\t<Status>Rejected</Status>\r\n\t\t\t\t<unitPrice>30.00</unitPrice>\r\n\t\t\t\t<discountValue>1.00</discountValue>\r\n\t\t\t\t<itemDescription>description4</itemDescription>\r\n\t\t\t\t<supplierCode>SUPPL4</supplierCode>\r\n\t\t\t</line>\t\t\t\r\n\t\t</orderLines>\r\n\t</pOrder>\r\n</orderData>"
              variable: var_resp.body
              content: application/xml
          outputs:
            output:
              schema:
                description: ''
                type: object
                properties:
                  orderNo:
                    type: string
                    name: orderNo
                  orderDate:
                    type: string
                    name: orderDate
                  currency:
                    type: string
                    name: currency
                  shipTo:
                    type: object
                    properties:
                      name:
                        type: string
                        name: name
                      address:
                        type: string
                        name: address
                      zip:
                        type: string
                        name: zip
                    name: shipTo
                  billTo:
                    type: object
                    properties:
                      name:
                        type: string
                        name: name
                      address:
                        type: string
                        name: address
                      zip:
                        type: string
                        name: zip
                    name: billTo
                  orderDetail:
                    type: array
                    items:
                      properties:
                        orderLineNo:
                          type: string
                          name: orderLineNo
                        quantity:
                          type: number
                          name: quantity
                        unitPrice:
                          type: number
                          name: unitPrice
                        discount:
                          type: number
                          name: discount
                        lineStatus:
                          type: string
                          name: lineStatus
                        description:
                          type: string
                          name: description
                        supplierCode:
                          type: string
                          name: supplierCode
                      type: object
                    name: orderDetail
                  orderSummary:
                    type: object
                    properties:
                      totalLines:
                        type: number
                        name: totalLines
                      orderValue:
                        type: number
                        name: orderValue
                      discount:
                        type: number
                        name: discount
                    name: orderSummary
                example: |-
                  {
                    "orderNo": "11111",
                    "orderDate": "21-11-2020",
                    "currency": "USD",
                    "shipTo": {
                      "name": "Mohammed",
                      "address": "street1,city1,state1",
                      "zip": "123456"
                    },
                    "billTo": {
                      "name": "Mohammed",
                      "address": "street2,city2,state2",
                      "zip": "654321"
                    },
                    "orderDetail": [
                      {
                        "orderLineNo": "01",
                        "quantity": 1,
                        "unitPrice": 20,
                        "lineStatus": "0",
                        "description": "description1",
                        "supplierCode": "SUPPL1"
                      },
                      {
                        "orderLineNo": "02",
                        "quantity": 2,
                        "unitPrice": 21.5,
                        "discount": 5.5,
                        "lineStatus": "0",
                        "description": "description2",
                        "supplierCode": "SUPPL2"
                      },
                      {
                        "orderLineNo": "03",
                        "quantity": 2,
                        "unitPrice": 31.5,
                        "discount": 7.5,
                        "lineStatus": "1",
                        "description": "description3",
                        "supplierCode": "SUPPL3"
                      }
                    ],
                    "orderSummary": {
                      "totalLines": 2,
                      "orderValue": 63,
                      "discount": 11
                    }
                  }
              variable: message.body
              content: application/json
          actions:
            - set: output.shipTo.name
              from: input.orderData.pOrder.shippingAddress.name
            - set: output.orderNo
              from: input.orderData.pOrder.orderHeader.orderNumber
            - set: output.currency
              from: input.orderData.pOrder.orderHeader.currency
            - set: output.shipTo.address
              from:
                - input.orderData.pOrder.shippingAddress.street
                - input.orderData.pOrder.shippingAddress.city
                - input.orderData.pOrder.shippingAddress.state
                - input.orderData.pOrder.shippingAddress.@country
              value: |
                $(input.orderData.pOrder.shippingAddress.street) + ", "+
                $(input.orderData.pOrder.shippingAddress.city)+", "+
                $(input.orderData.pOrder.shippingAddress.state)+", "+
                $(input.orderData.pOrder.shippingAddress.@country);
            - set: output.shipTo.zip
              from: input.orderData.pOrder.shippingAddress.zip
            - set: output.billTo.name
              from: input.orderData.pOrder.billingAddress.name
            - set: output.billTo.address
              from:
                - input.orderData.pOrder.billingAddress.street
                - input.orderData.pOrder.billingAddress.state
                - input.orderData.pOrder.billingAddress.@country
                - input.orderData.pOrder.billingAddress.city
              value: |-
                $(input.orderData.pOrder.billingAddress.street)+", "
                + $(input.orderData.pOrder.billingAddress.city)+", "
                + $(input.orderData.pOrder.billingAddress.state)+", "
                + $(input.orderData.pOrder.billingAddress.@country)
            - create: output.orderDetail
              foreach: input.orderData.pOrder.orderLines.line
              from: input.orderData.pOrder.orderLines.line
              actions:
                - set: orderLineNo
                  from: lineNo
                - set: quantity
                  from: quantity
                - set: unitPrice
                  from: unitPrice
                - set: discount
                  from: discountValue
                - set: description
                  from: itemDescription
                - set: supplierCode
                  from: supplierCode
                - set: lineStatus
                  from: status
                  value: |-
                    var retValue = undefined;
                    if ($(status).toUpperCase() == 'ACTIVE'){
                        retValue=0;
                    }else if ($(status).toUpperCase() == 'REJECTED'){
                        retValue=2;
                    }else if ($(status).toUpperCase() == 'CANCELLED'){
                        retValue=1;
                    }else{
                        retValue=$(status);
                    }
                    retValue;
            - set: output.orderSummary.totalLines
              from: input.orderData.pOrder.orderLines.line
              foreach: input.orderData.pOrder.orderLines.line
              value: $(0)+1;
            - set: output.orderSummary.orderValue
              foreach: input.orderData.pOrder.orderLines.line
              from:
                - input.orderData.pOrder.orderLines.line.unitPrice
                - input.orderData.pOrder.orderLines.line.quantity
                - input.orderData.pOrder.orderLines.line.status
              value: |-
                var statusValue = $(input.orderData.pOrder.orderLines.line.status).toUpperCase();
                if (statusValue === 'ACTIVE'){
                    +$(0) + $(input.orderData.pOrder.orderLines.line.unitPrice) * $(input.orderData.pOrder.orderLines.line.quantity);
                }else{
                    +$(0) + 0;
                }
            - set: output.orderSummary.discount
              foreach: input.orderData.pOrder.orderLines.line
              from:
                - input.orderData.pOrder.orderLines.line.discountValue
                - input.orderData.pOrder.orderLines.line.status
              value: |-
                var statusValue = $(input.orderData.pOrder.orderLines.line.status).toUpperCase();
                if (statusValue === 'ACTIVE'){
                    +$(0) + +$(input.orderData.pOrder.orderLines.line.discountValue);
                }else{
                    +$(0) + 0;
                }
    finally: []
  properties:
    target-url:
      value: http://demo5517844.mockable.io/
      description: The URL of the target service
      encoded: false
  catalogs: {}
  application-authentication:
    certificate: false
  activity-log:
    enabled: true
    error-content: header
    success-content: activity
  servers:
    - url: https://192.168.3.183:9443/apicbatch2/958-catalog/map-policy-demo-api
      description: ''
      type:
        - production
        - development
  oauth-servers: []
basePath: /map-policy-demo-api
paths:
  /:
    get:
      responses:
        '200':
          description: success
          schema:
            type: string
      consumes: []
      produces: []
    put:
      responses:
        '200':
          description: success
          schema:
            type: string
      consumes: []
      produces: []
    post:
      responses:
        '200':
          description: success
          schema:
            type: string
      consumes: []
      produces: []
    delete:
      responses:
        '200':
          description: success
          schema:
            type: string
      consumes: []
      produces: []
    options:
      responses:
        '200':
          description: success
          schema:
            type: string
      consumes: []
      produces: []
    head:
      responses:
        '200':
          description: success
          schema:
            type: string
      consumes: []
      produces: []
    patch:
      responses:
        '200':
          description: success
          schema:
            type: string
      consumes: []
      produces: []
securityDefinitions:
  clientID:
    type: apiKey
    in: header
    name: X-IBM-Client-Id
security:
  - {}
schemes:
  - https
